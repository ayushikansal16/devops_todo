name: Todo-cicd-app

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Build_and_Deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}


    # Step 3: Build the Docker image
    - name: Build Docker image
      env: 
         IMAGE_TAG : ${{ github.sha }}
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/task-app:${IMAGE_TAG} .


    # Step 4: Push the Docker image to Docker Hub
    - name: Push Docker image
      env: 
         IMAGE_TAG : ${{ github.sha }}
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/task-app:${IMAGE_TAG}

        
    # Step 5: updating the new image to docker-compose file
    - name: update image tag in docker-compose file
      env: 
         IMAGE_TAG: ${{ github.sha }}
         IMAGE_NAME: "dumalbhaskar/task-app"
         
      run: |
            git config --global user.email "ayushikansal168@gmail.com"
            git config --global user.name "ayushi kansal"
            sed -i "s|image:.*|image: $IMAGE_NAME:$IMAGE_TAG|g" docker-compose.yaml
            git add . 
            git commit -m "updating the new image tag"
            git push 
                     

    # Step 6: Transfer files to the EC2 instance
    - name: Copy files to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "docker-compose.yaml"
        target: "/home/${{ secrets.SERVER_USER }}/todo-app/"


    # Step 7: SSH into the EC2 instance and deploy
    - name: Deploy using docker-compose on EC2
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /home/${{ secrets.SERVER_USER }}/todo-app/
          docker-compose down
          docker-compose pull
          docker-compose up -d
